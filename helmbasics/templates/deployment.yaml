apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}-deployment
  labels:
    app: {{ .Values.appname }}
spec:
  # We want three replicas to be up!
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
    spec:
      initContainers:
      - name: sleeper
      image: busybox:1.28
      command: {'sh','-c'"sleep 10"}
      containers:
      - name: {{ .Values.appname }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        # Generates a customized main page and executes the container's original entrypoint
        command: ["/bin/sh","-c"]
        args: ["/home/script/index.sh; /entrypoint.sh /run.sh"]
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        env:
            # Environment Variable which stores the value from the cm
            - name: ENV_VAR
              valueFrom:
                configMapKeyRef:
                  # ConfigMap Name
                  name: {{ .Release.Name }}-cm
                  # Key for the desired value
                  key: env
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: user-pass-secret
          mountPath: "/etc/usrpwd"
          readOnly: true
        - name: web-persistence
          mountPath: "/app"
        - name: script
          mountPath: "/home/script"
          readOnly: true

      volumes:
      - name: user-pass-secret
        secret:
          secretName: {{ .Release.Name }}-secret
      - name: web-persistence
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-{{ .Values.pvc.claimname }}
      - name: script
        configMap:
          name: {{ .Release.Name }}-cm-scripts
          defaultMode: 0755


